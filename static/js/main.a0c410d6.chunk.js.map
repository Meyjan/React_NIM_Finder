{"version":3,"sources":["components/Title/Title.jsx","components/Help/Help.jsx","components/Register/RegisterForm.jsx","components/Register/Register.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","components/Search/SearchForm.jsx","components/Search/Search.jsx","components/NavigationBar/NavigationBar.jsx","components/NavigationBar_Bottom/NavigationBarBottom.jsx","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","className","Help","RegisterForm","props","onSubmit","onRegister","id","type","name","placeholder","aria-label","aria-describedby","registerURL","Register","state","registered","status","undefined","handleRegister","_callee","e","registerName","registerPassword","details","formBody","property","encodedKey","encodedValue","register_call","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","username","value","password","encodeURIComponent","push","join","fetch","method","headers","Content-Type","body","sent","json","console","log","code","_this","setState","stop","color","Register_RegisterForm","this","Component","LoginForm","onLogin","Login","loginFail","handleLogin","loginName","loginPassword","onLoggedIn","token","Login_LoginForm","SearchForm","onSearch","searchNIM","searchName","numRegex","RegExp","Search","found","result","totalPage","handleSearch","searchQuery","urlLink","search_call","temp","resp","i","_i","urlLink2","finder","test","Auth-Token","authToken","payload","nim_tpb","nim_jur","prodi","Search_SearchForm","scope","map","res","key","NavigationBar","onClick","gotoTitle","data-toggle","data-target","aria-controls","aria-expanded","gotoHelp","loggedIn","disabled","gotoSearch","tabIndex","aria-disabled","gotoRegister","gotoLogin","gotoLogout","NavigationBarBottom","App","showScreen","handlegotoTitle","handlegotoLogin","handlegotoRegister","handlegotoSearch","handlegotoHelp","handleLoggedIn","handleLoggedOut","Fragment","components_NavigationBar_NavigationBar","components_Title_Title","components_Register_Register","components_Login_Login","components_Search_Search","components_Help_Help","NavigationBar_Bottom_NavigationBarBottom","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0c410d6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Title.css\";\r\n\r\nconst Title = () => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"column\">\r\n        <div className=\"title-container__title\">\r\n          <h1>Stalk your friends here!</h1>\r\n          <p>React NIM Finder</p>\r\n          <h3>-----------------------------------------------</h3>\r\n          <h4>Though you have to login first</h4>\r\n          <h5>(or register if you haven't)</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./Help.css\";\r\n\r\nconst Help = () => {\r\n  return (\r\n    <div className=\"help-wrapper\">\r\n      <div className=\"help-margin\">\r\n        <div className=\"help-title\">\r\n          <b>HELP</b>\r\n        </div>\r\n        <div className=\"help-text\">\r\n          <p>\r\n            <b>REGISTER</b>\r\n          </p>\r\n          <p>\r\n            Enter your desired username and password at the provided input box.\r\n            After that, click the register button It may have been taken by\r\n            others though, but usually it haven't been taken by others, so\r\n            usually you won't have to rethink for your username and password.\r\n            After being registered, you can access your log into your account so\r\n            that you can start <i>stalking</i>.\r\n          </p>\r\n          <p>\r\n            <b>LOGIN</b>\r\n          </p>\r\n          <p>\r\n            Log into your account that you have been registered. You can input\r\n            your username and your password at the provided space and hit the\r\n            login button. After logging in, you now gain access to the API and\r\n            now can start <i>stalking</i>. Remember to register first if you\r\n            don't have an account. Otherwise, you won't be able to login (\r\n            <i>obviously</i>).\r\n          </p>\r\n          <p>\r\n            <b>SEARCH</b>\r\n          </p>\r\n          <p>\r\n            Your stalking machine! Be it your friend's NIM or name, this machine\r\n            can look up the details for you! Just enter your query at the\r\n            provided space and click on the search button to start searching.\r\n            This machine will then return the result it gets from the API, which\r\n            is the list of name and the details about that person which has the\r\n            same criteria as your query (or nothing if it doesn't match with\r\n            anything). Do remember, this feature is only accessible once you've\r\n            logged in.\r\n          </p>\r\n          <p>\r\n            <b>LOGOUT</b>\r\n          </p>\r\n          <p>\r\n            Log out from your account. This feature is only accessible once\r\n            you've logged in. Though I should say you shouldn't use this feature\r\n            because it's preventing you from stalking your friends. I suggest\r\n            you should only use this feature once doctors and psychiatrists come\r\n            into your house because you've done too much stalking.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Help;\r\n","import React from \"react\";\r\n\r\nconst RegisterForm = props => (\r\n  <form onSubmit={props.onRegister}>\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\r\n          Username\r\n        </span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        className=\"form-control\"\r\n        placeholder=\"Username...\"\r\n        aria-label=\"Default\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\r\n          Password\r\n        </span>\r\n      </div>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        className=\"form-control\"\r\n        placeholder=\"Password...\"\r\n        aria-label=\"Default\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n      />\r\n    </div>\r\n    <button className=\"btn btn-outline-secondary btn-lg\">Register!</button>\r\n  </form>\r\n);\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from \"react\";\r\nimport RegisterForm from \"./RegisterForm\";\r\nimport \"./Register.css\";\r\n\r\nconst registerURL = `https://api.stya.net/nim/register`;\r\n\r\nclass Register extends Component {\r\n  state = {\r\n    registered: 0,\r\n    status: undefined\r\n  };\r\n\r\n  handleRegister = async e => {\r\n    e.preventDefault();\r\n\r\n    const registerName = e.target.elements.username.value;\r\n    const registerPassword = e.target.elements.password.value;\r\n\r\n    const details = {\r\n      username: registerName,\r\n      password: registerPassword\r\n    };\r\n\r\n    let formBody = [];\r\n    for (const property in details) {\r\n      const encodedKey = encodeURIComponent(property);\r\n      const encodedValue = encodeURIComponent(details[property]);\r\n      formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    const register_call = await fetch(registerURL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\r\n      },\r\n      body: formBody\r\n    });\r\n    const data = await register_call.json();\r\n\r\n    console.log(\"Handle register received\");\r\n    console.log(data.code);\r\n    console.log(data.status);\r\n\r\n    if (data.code === 0) {\r\n      this.setState({ registered: 1 });\r\n    } else {\r\n      this.setState({ registered: -1 });\r\n      this.setState({ status: data.status });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"register-title-wrapper\">\r\n          <div className=\"register-title-text-wrapper\">\r\n            <h1>\r\n              <font color=\"white\">Register your new account Here!</font>\r\n            </h1>\r\n            <h3>\r\n              <font color=\"white\">\r\n                Enter your desired username and password!\r\n              </font>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"register-form-wrapper\">\r\n          <div className=\"register-form-text-wrapper\">\r\n            <RegisterForm onRegister={this.handleRegister} />\r\n            {(this.state.registered === 1 || this.state.registered === -1) && (\r\n              <p>---------------------</p>\r\n            )}\r\n            {this.state.registered === 1 && <p>Registration Success!</p>}\r\n            {this.state.registered === -1 && <p>Registration Failed...</p>}\r\n            {this.state.registered === -1 && <p>{this.state.status}</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nconst LoginForm = props => (\r\n  <form onSubmit={props.onLogin}>\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\r\n          Username\r\n        </span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\"\r\n        className=\"form-control\"\r\n        placeholder=\"Username...\"\r\n        aria-label=\"Default\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n      />\r\n    </div>\r\n\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\r\n          Password\r\n        </span>\r\n      </div>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        className=\"form-control\"\r\n        placeholder=\"Password...\"\r\n        aria-label=\"Default\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n      />\r\n    </div>\r\n    <button className=\"btn btn-outline-secondary btn-lg\">Login!</button>\r\n  </form>\r\n);\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport \"./Login.css\";\r\n\r\nconst registerURL = `https://api.stya.net/nim/login`;\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    loginFail: false,\r\n    status: undefined\r\n  };\r\n\r\n  handleLogin = async e => {\r\n    e.preventDefault();\r\n\r\n    const loginName = e.target.elements.username.value;\r\n    const loginPassword = e.target.elements.password.value;\r\n\r\n    const details = {\r\n      username: loginName,\r\n      password: loginPassword\r\n    };\r\n\r\n    let formBody = [];\r\n    for (const property in details) {\r\n      const encodedKey = encodeURIComponent(property);\r\n      const encodedValue = encodeURIComponent(details[property]);\r\n      formBody.push(encodedKey + \"=\" + encodedValue);\r\n    }\r\n    formBody = formBody.join(\"&\");\r\n\r\n    const register_call = await fetch(registerURL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\r\n      },\r\n      body: formBody\r\n    });\r\n    const data = await register_call.json();\r\n\r\n    if (data.code === 0) {\r\n      this.props.onLoggedIn(data.token);\r\n    } else {\r\n      this.setState({ loginFail: true });\r\n      this.setState({ status: data.status });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"login-title-wrapper\">\r\n          <div className=\"login-title-text-wrapper\">\r\n            <h1>\r\n              <font color=\"white\">Log into your account Here!</font>\r\n            </h1>\r\n            <h3>\r\n              <font color=\"white\">Enter your username and password!</font>\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <div className=\"login-form-wrapper\">\r\n          <div className=\"login-form-text-wrapper\">\r\n            <LoginForm onLogin={this.handleLogin} />\r\n            {this.state.loginFail && <p>---------------</p>}\r\n            {this.state.loginFail && <p>Login Failed...</p>}\r\n            {this.state.loginFail && <p>{this.state.status}</p>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nconst SearchForm = props => (\r\n  <form onSubmit={props.onSearch}>\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\" id=\"inputGroup-sizing-default\">\r\n          Query\r\n        </span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        name=\"finder\"\r\n        className=\"form-control\"\r\n        placeholder=\"Query...\"\r\n        aria-label=\"Default\"\r\n        aria-describedby=\"inputGroup-sizing-default\"\r\n      />\r\n    </div>\r\n    <button className=\"btn btn-secondary btn-sm\">Stalk!</button>\r\n  </form>\r\n);\r\n\r\nexport default SearchForm;\r\n","import React, { Component } from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport \"./Search.css\";\r\n\r\nconst searchNIM = `https://api.stya.net/nim/byid?query=`;\r\nconst searchName = `https://api.stya.net/nim/byname?name=`;\r\nconst numRegex = new RegExp(/^\\d+$/);\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    found: 0,\r\n    result: undefined,\r\n    totalPage: 0\r\n  };\r\n\r\n  handleSearch = async e => {\r\n    e.preventDefault();\r\n\r\n    const searchQuery = e.target.elements.finder.value;\r\n\r\n    let urlLink = numRegex.test(searchQuery) ? searchNIM : searchName;\r\n    urlLink += searchQuery;\r\n    urlLink += `&count=10`;\r\n\r\n    let search_call = await fetch(urlLink, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Auth-Token\": this.props.authToken\r\n      }\r\n    });\r\n    let data = await search_call.json();\r\n\r\n    if (data.code <= 0) {\r\n      this.setState({ found: -1 });\r\n    } else {\r\n      let temp = [];\r\n      let resp = data.code;\r\n      let i = 1;\r\n\r\n      while (resp > 0) {\r\n        for (const i in data.payload) {\r\n          temp.push([\r\n            data.payload[i].name,\r\n            data.payload[i].nim_tpb,\r\n            data.payload[i].nim_jur,\r\n            data.payload[i].prodi\r\n          ]);\r\n        }\r\n        let urlLink2 = urlLink + `&page=` + i;\r\n        search_call = await fetch(urlLink2, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Auth-Token\": this.props.authToken\r\n          }\r\n        });\r\n        data = await search_call.json();\r\n        resp = data.code;\r\n        i += 1;\r\n      }\r\n\r\n      this.setState({ result: temp });\r\n\r\n      console.log(this.state.result);\r\n      this.setState({ totalPage: resp === 0 ? i - 1 : i });\r\n      this.setState({ found: 1 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-wrapper\">\r\n        <div className=\"column\">\r\n          <h5>\r\n            <br />\r\n          </h5>\r\n          <div className=\"search-text-wrapper\">\r\n            <h2>Enter NIM or Name</h2>\r\n            <SearchForm onSearch={this.handleSearch} />\r\n            {this.state.found === -1 && <h4>Nothing Found...</h4>}\r\n            {this.state.found === 1 && <h4>Results...</h4>}\r\n          </div>\r\n          {this.state.found === 1 && (\r\n            <div className=\"overflow-auto\">\r\n              <table className=\"table table-striped table-bordered table-sm\">\r\n                <thead className=\"thead-dark\">\r\n                  <tr>\r\n                    <th className=\"th-sm\" scope=\"col\">\r\n                      Nama\r\n                    </th>\r\n                    <th className=\"th-sm\" scope=\"col\">\r\n                      NIM TPB\r\n                    </th>\r\n                    <th className=\"th-sm\" scope=\"col\">\r\n                      NIM Jurusan\r\n                    </th>\r\n                    <th className=\"th-sm\" scope=\"col\">\r\n                      Prodi\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {this.state.result.map(res => (\r\n                    <tr key={res[2]}>\r\n                      <td>{res[0]}</td>\r\n                      <td>{res[1]}</td>\r\n                      <td>{res[2]}</td>\r\n                      <td>{res[3]}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst NavigationBar = props => {\r\n  return (\r\n    <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n      <button className=\"btn btn-default\" onClick={() => props.gotoTitle()}>\r\n        <h4>\r\n          <font color=\"white\">React NIM Finder</font>\r\n        </h4>\r\n      </button>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarTogglerDemo02\"\r\n        aria-controls=\"navbarTogglerDemo02\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n        <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <button\r\n              className=\"btn btn-default\"\r\n              onClick={() => props.gotoHelp()}\r\n            >\r\n              <font color=\"white\">Help</font>\r\n            </button>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <button\r\n              className={\r\n                props.loggedIn ? \"btn btn-default\" : \"btn btn-default disabled\"\r\n              }\r\n              disabled={props.loggedIn ? false : true}\r\n              onClick={() => props.gotoSearch()}\r\n              tabIndex=\"-1\"\r\n              aria-disabled=\"true\"\r\n            >\r\n              <font color=\"white\">Search!</font>\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"nav navbar-nav navbar-right mt-2 mt-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <button\r\n              className=\"btn btn-default\"\r\n              onClick={() => props.gotoRegister()}\r\n            >\r\n              <font color=\"white\">Register</font>\r\n            </button>\r\n          </li>\r\n          {!props.loggedIn && (\r\n            <li className=\"nav-item\">\r\n              <button\r\n                className=\"btn btn-default\"\r\n                onClick={() => props.gotoLogin()}\r\n              >\r\n                <font color=\"white\">Login</font>\r\n              </button>\r\n            </li>\r\n          )}\r\n          {props.loggedIn && (\r\n            <li className=\"nav-item\">\r\n              <button\r\n                className=\"btn btn-default\"\r\n                onClick={() => props.gotoLogout()}\r\n              >\r\n                <font color=\"white\">Logout</font>\r\n              </button>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React from \"react\";\r\n\r\nconst NavigationBarBottom = () => {\r\n  return (\r\n    <nav className=\"navbar fixed-bottom navbar-expand-sm navbar-dark bg-dark\">\r\n      <font color=\"white\">\r\n        Made by <i>(Jan Meyer Saragih / 13517131)</i>. All rights reserved?\r\n      </font>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBarBottom;\r\n","// DECORATOR DESIGN PATTERN\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Title from \"./components/Title/Title\";\nimport Help from \"./components/Help/Help\";\nimport Register from \"./components/Register/Register\";\nimport Login from \"./components/Login/Login\";\nimport Search from \"./components/Search/Search\";\nimport NavigationBar from \"./components/NavigationBar/NavigationBar\";\nimport NavigationBarBottom from \"./components/NavigationBar_Bottom/NavigationBarBottom\";\n\nclass App extends Component {\n  state = {\n    showScreen: \"title\",\n    loggedIn: false,\n    authToken: \"\"\n  };\n\n  handlegotoTitle = () => {\n    this.setState({ showScreen: \"title\" });\n  };\n\n  handlegotoLogin = () => {\n    this.setState({ showScreen: \"login\" });\n  };\n\n  handlegotoRegister = () => {\n    this.setState({ showScreen: \"register\" });\n  };\n\n  handlegotoSearch = () => {\n    this.setState({ showScreen: \"search\" });\n  };\n\n  handlegotoHelp = () => {\n    this.setState({ showScreen: \"help\" });\n  };\n\n  handleLoggedIn = token => {\n    this.setState({ showScreen: \"search\" });\n    this.setState({ loggedIn: true });\n    this.setState({ authToken: token });\n  };\n\n  handleLoggedOut = () => {\n    this.setState({ showScreen: \"title\" });\n    this.setState({ loggedIn: false });\n    this.setState({ authToken: undefined });\n  };\n\n  render() {\n    // Di atas Fragment buatlah NavBar dahulu untuk pindah laman\n    return (\n      <React.Fragment>\n        <NavigationBar\n          gotoTitle={this.handlegotoTitle}\n          gotoHelp={this.handlegotoHelp}\n          gotoSearch={this.handlegotoSearch}\n          gotoLogin={this.handlegotoLogin}\n          gotoLogout={this.handleLoggedOut}\n          gotoRegister={this.handlegotoRegister}\n          loggedIn={this.state.loggedIn}\n        />\n        <div className=\"bg\">\n          {this.state.showScreen === \"title\" && <Title />}\n          {this.state.showScreen === \"register\" && <Register />}\n          {this.state.showScreen === \"login\" && (\n            <Login onLoggedIn={this.handleLoggedIn} />\n          )}\n          {this.state.showScreen === \"search\" && (\n            <Search authToken={this.state.authToken} />\n          )}\n          {this.state.showScreen === \"help\" && <Help />}\n        </div>\n        <NavigationBarBottom />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}